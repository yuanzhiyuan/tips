作用一：代替go to
想象一下：一个函数中，会出现错误检查，如果产生错误，我们想直接跳到函数末尾进行返回，直观的想法就是goto，但是goto不好。
可以把整个函数体（除了最后的返回语句）用do{}while(0)包围，当检测到错误的时候，break即可



作用二：宏定义中的代码块

定义如下的宏：
#define DO_()  f1(); f2();

如果这么用：
if(flag)
	DO_();
else
	....
很明显，展开宏就会得到这样：
if(flag)
	f1();
f2(); 
else
	...
	
	
如果这样改：
#define DO_()  {f1(); f2();};
结果是这样：
if(flag)
{f1();
f2();
} ;
else
	....
也不对。

如果用do while改成这样：
#define DO_() do{f1();f2();}while(0);
结果是：
if(flag)
	do(f1();f2();)while(0);
else
	...
	
就可以了。

建议写if语句的时候不要省略大括号 


 
 
